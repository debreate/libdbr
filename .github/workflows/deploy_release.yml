
name: Deploy Release

on:
  push:
    tags:
      - 'v[0-9]*'
  workflow_dispatch:

jobs:
  dist-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    defaults:
      run:
        shell: bash

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup environment
        run: |
          package=$(grep "^package = " build.conf | head -n 1 | sed -e 's/^package = //')
          version=$(python3 build.py -v)
          if [[ "${{ github.ref_name }}" =~ ^v[0-9] ]]; then
            echo "using GitHub ref version ..."
            version=$(echo ${{ github.ref_name }} | sed 's/^v//')
          fi
          echo "configuring ${package} version ${version} ..."
          echo "ver=${version}" >> $GITHUB_ENV

      - name: build source package
        run: python3 build.py -t dist-source -V

      - name: prepare release information
        run: echo -e "Changes:\n\n$(python3 build.py -t changes)" > release_notes.tmp

      - name: publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: 'Version ${{ env.ver }}'
          body_path: release_notes.tmp
          files: build/dist/*
          prerelease: true

  page:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
      - name: checkout
        run: |
          git clone -v "https://github.com/${{ github.repository }}.git" ./
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git branch gh-pages origin/gh-pages
          git checkout ${{ github.ref_name }}
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: setup environment
        run: |
          package=$(grep "^package = " build.conf | head -n 1 | sed -e 's/^package = //')
          version=$(python3 build.py -v)
          if [[ "${{ github.ref_name }}" =~ ^v[0-9] ]]; then
            echo "using GitHub ref version ..."
            version=$(echo ${{ github.ref_name }} | sed 's/^v//')
          fi
          echo "configuring ${package} version ${version} ..."
          echo "ver=${version}" >> $GITHUB_ENV

      - name: setup build dependencies
        run: sudo apt install doxygen

      - name: build docs
        run: python3 build.py -t docs

      - name: add docs
        run: |
          git checkout gh-pages
          # check if reference has already been added
          [[ -e "reference/${{ env.ver }}" ]] && echo "ERROR: v${{ env.ver }} docs alread deployed, 'reference/${{ env.ver }}' exists" && exit 1
          # use most current license text
          mv -v build/docs/html/LICENSE.txt ./
          sed -i -e 's/<a href="LICENSE.txt">/<a href="\/libdbr\/LICENSE.txt">/' build/docs/html/index.html
          mv -v build/docs/html/ reference/${{ env.ver }}
          # link to current release
          ln -vsfr reference/${{ env.ver }} reference/latest
          # update version list
          sed -i -e "s/^        <li><a href=\"latest\/\">latest<\/a><\/li>$/        <li><a href=\"latest\/\">latest<\/a><\/li>\n        <li><a href=\"${{ env.ver }}\/\">${{ env.ver }}<\/a><\/li>/" reference/index.html

      - name: publish
        run: |
          git add -v -- ./
          git commit -v -m "Publish ${{ github.ref_name }}"
          git push -v
